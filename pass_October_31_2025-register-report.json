{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-31T22:01:34.537Z",
    "end": "2025-10-31T22:02:06.212Z",
    "duration": 31675,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "283a23cd-5a3f-4e8d-a98e-0210385a4a5a",
      "title": "",
      "fullFile": "cypress/e2e/auth/register.cy.js",
      "file": "cypress/e2e/auth/register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4022020f-0d6e-44f1-80f5-502758233edc",
          "title": "User Registration Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001: Should register a new user successfully",
              "fullTitle": "User Registration Tests TC001: Should register a new user successfully",
              "timedOut": null,
              "duration": 12703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1-3: Navegação e verificação\nhomePage.verifyTextPresent('Full-Fledged practice website for Automation Engineers');\n// Step 4-16: Registro completo de usuário\ncy.fixture('users.json').then(userData => {\n  const uniqueEmail = `testuser.${Date.now()}@automationexercise.com`;\n  const testUser = _objectSpread(_objectSpread({}, userData.newUser), {}, {\n    email: uniqueEmail\n  });\n  cy.registerNewUser(testUser, userData.address);\n  // Step 17-18: Delete Account\n  cy.deleteAccount();\n});",
              "err": {},
              "uuid": "0f92ac1b-a1a2-4068-9823-b561f3fed231",
              "parentUUID": "4022020f-0d6e-44f1-80f5-502758233edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC005: Should show error when registering with existing email",
              "fullTitle": "User Registration Tests TC005: Should show error when registering with existing email",
              "timedOut": null,
              "duration": 18774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1-3: Home page\nhomePage.verifyTextPresent('Full-Fledged practice website for Automation Engineers');\ncy.fixture('users.json').then(userData => {\n  const testEmail = `existing.${Date.now()}@test.com`;\n  const testUser = _objectSpread(_objectSpread({}, userData.newUser), {}, {\n    email: testEmail\n  });\n  // Criar conta primeiro\n  cy.registerNewUser(testUser, userData.address);\n  // Fazer logout\n  homePage.logout();\n  // Tentar registrar novamente com o mesmo email\n  // Step 4-5: Click Signup/Login e verificar página\n  homePage.clickSignupLogin();\n  loginPage.verifySignupPageVisible();\n  // Step 6: Enter name and existing email\n  loginPage.signup(userData.newUser.name, testEmail);\n  // Step 8: Verify error message\n  loginPage.verifyEmailExistsError();\n  // Cleanup: Login e deletar conta\n  cy.get('input[data-qa=\"login-email\"]').clear().type(testEmail);\n  cy.get('input[data-qa=\"login-password\"]').clear().type(userData.newUser.password);\n  cy.get('button[data-qa=\"login-button\"]').click();\n  cy.contains('Logged in as', {\n    timeout: 10000\n  }).should('be.visible');\n  cy.deleteAccount();\n});",
              "err": {},
              "uuid": "e264a049-2de8-4eb5-9d94-30d4a769b955",
              "parentUUID": "4022020f-0d6e-44f1-80f5-502758233edc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f92ac1b-a1a2-4068-9823-b561f3fed231",
            "e264a049-2de8-4eb5-9d94-30d4a769b955"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "reportFilename": "[status]_[datetime]-[name]-report",
        "html": true,
        "json": true,
        "overwrite": false,
        "timestamp": "longDate"
      },
      "version": "6.3.0"
    }
  }
}